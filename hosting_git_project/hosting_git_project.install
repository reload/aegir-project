<?php
/**
 * @file
 *   Install, update and uninstall for Devshop Projects
 */

/**
 * Implementation of hook_schema().
 */
function hosting_git_project_schema() {
 $schema['hosting_git_project'] = array(
    'fields' => array(
      'vid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Node revision ID.',
      ),
      'nid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Project node ID.',
      ),
      'makefile_url' => array(
        'type' => 'text',
        'size' => 'big',
        'not null' => TRUE,
        'description' => 'URL to the makefile.',
      ),
      'project_type' => array(
        'type' => 'varchar',
        'not null' => TRUE,
        'length' => 255,
        'default' => 'github',
        'description' => 'Type of project, defaults to github.',
      ),
      'install_profile' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'description' => 'Default install profile.',
      ),
      'base_domain' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'description' => 'Deployments will be postfixed this domain',
      ),
      'web_server' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'db_server' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'status' => array(
        'type' => 'varchar',
        'not null' => TRUE,
        'length' => 255,
        'default' => 'enabled',
        'description' => 'Project status',
      ),
    ),
    'primary key' => array('vid'),
  );

 $schema['hosting_git_project_deployment'] = array(
    'fields' => array(
      'project_nid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Project node ID.',
      ),
      'deployment_id' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'ID of the deployment',
      ),
      'name' => array(
        'type' => 'varchar',
        'not null' => TRUE,
        'length' => 255,
        'description' => 'Name of the site.',
      ),
      'site_nid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => FALSE,
        'default' => 0,
        'description' => 'ID of the site currently deployed',
      ),
      'platform_nid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => FALSE,
        'default' => 0,
        'description' => 'ID of the platform currently deployed',
      ),
      'revision' => array(
        'type' => 'varchar',
        'not null' => TRUE,
        'length' => 255,
        'default' => 'master',
        'description' => 'Git revspec.',
      ),
      'deploy_status' => array(
        'type' => 'varchar',
        'not null' => TRUE,
        'length' => 255,
        'default' => 'enabled',
        'description' => 'Deployment status',
      ),
    ),
    'primary key' => array('deployment_id'),
  );

  return $schema;
}

/**
 * Implementation of hook_install().
 */
function hosting_git_project_install() {
  // Create tables.
  drupal_install_schema('hosting_git_project');
}

/**
 * Implementation of hook_uninstall().
 */
function hosting_git_project_uninstall() {
  // Delete tables.
  drupal_uninstall_schema('hosting_git_project');
}
