<?php

include_once('hosting_git_project.node.inc');
include_once('hosting_git_project.form.inc');

/**
 * Implementation of hook_menu().
 */
function hosting_git_project_menu() {
  $items = array();
  $items['hosting/project'] = array(
    'title' => 'Projects',
    'description' => 'List of projects',
    'page callback' => 'hosting_git_project_listing',
    'access arguments' => array('view project'));

  $items['hosting/project/access'] = array(
    'title' => 'Access',
    'description' => '',
    'page callback' => 'hosting_git_project_access',
    'access arguments' => array('view project'));

  return $items;
}

/**
 * Implementation of hook_hosting_tasks().
 */
function hosting_git_project_hosting_tasks() {
  $tasks = array();
  $tasks['git_project']['deploy'] = array(
    'title' => t('Deploy'),
    'description' => t('Create a deployment'),
    'dialog' => TRUE,

  );
  $tasks['git_project']['verify'] = array(
    'title' => t('Verify'),
    'description' => t('Verify a project'),
    'dialog' => TRUE,
    'access callback' => 'hosting_git_project_hosting_task_access',
  );
  return $tasks;
}


function hosting_git_project_hosting_task_access($node, $task) {
  return TRUE;
}


/**
 * Implementation of hook_perm().
 */
function hosting_git_project_perm() {
  return array(
    'create deploy task',
  );
}


/**
 * Simple list for top level navigation.
 */
function hosting_git_project_listing() {
  $projects = _hosting_git_project_get_projects();

  $header = array(t('Project') , t('Basedomain'), t('Profile'));

  $rows[] = array();

  $total = 0;
  foreach ($projects as $nid => $title) {
    $row = array();
    $node = node_load($nid);
    // TODO $row[] = array('class' => 'hosting-status' , 'data' => _hosting_node_link($nid));
    dpm($node);
    $row[] = _hosting_node_link($node->nid, $node->title);
    $row[] = $node->base_domain;
    $row[] = $node->install_profile;
    $rows[] = array('data' => $row);
  }

  return theme('table',  $header, $rows, array('class' => 'project-table'));
}


/**
 * Small helper function to get platforms that haven't been deleted.
 */
function _hosting_git_project_get_projects() {
  $return = array();
  $result = db_query("SELECT n.nid, n.title FROM {node} n LEFT JOIN {hosting_git_project} p ON n.nid = p.nid AND n.vid = p.vid
                      WHERE n.type='git_project' AND n.status=1 ORDER BY n.title");
  while($project = db_fetch_object($result)) {
    $return[$project->nid] = $project->title;
  }
  return $return;
}

